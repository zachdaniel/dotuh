defmodule Dotuh.Repo.Migrations.AddReferences do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    drop constraint(:players, "players_game_id_fkey")

    alter table(:players) do
      modify :game_id,
             references(:games,
               column: :id,
               name: "players_game_id_fkey",
               type: :uuid,
               prefix: "public",
               on_delete: :delete_all
             )
    end

    drop constraint(:items, "items_hero_id_fkey")

    drop constraint(:items, "items_game_id_fkey")

    alter table(:items) do
      modify :game_id,
             references(:games,
               column: :id,
               name: "items_game_id_fkey",
               type: :uuid,
               prefix: "public",
               on_delete: :delete_all
             )

      modify :hero_id,
             references(:heroes,
               column: :id,
               name: "items_hero_id_fkey",
               type: :uuid,
               prefix: "public",
               on_delete: :delete_all
             )
    end

    drop constraint(:heroes, "heroes_game_id_fkey")

    alter table(:heroes) do
      modify :game_id,
             references(:games,
               column: :id,
               name: "heroes_game_id_fkey",
               type: :uuid,
               prefix: "public",
               on_delete: :delete_all
             )
    end

    drop constraint(:buildings, "buildings_game_id_fkey")

    alter table(:buildings) do
      modify :game_id,
             references(:games,
               column: :id,
               name: "buildings_game_id_fkey",
               type: :uuid,
               prefix: "public",
               on_delete: :delete_all
             )
    end

    drop constraint(:abilities, "abilities_hero_id_fkey")

    drop constraint(:abilities, "abilities_game_id_fkey")

    alter table(:abilities) do
      modify :game_id,
             references(:games,
               column: :id,
               name: "abilities_game_id_fkey",
               type: :uuid,
               prefix: "public",
               on_delete: :delete_all
             )

      modify :hero_id,
             references(:heroes,
               column: :id,
               name: "abilities_hero_id_fkey",
               type: :uuid,
               prefix: "public",
               on_delete: :delete_all
             )
    end
  end

  def down do
    drop constraint(:abilities, "abilities_game_id_fkey")

    drop constraint(:abilities, "abilities_hero_id_fkey")

    alter table(:abilities) do
      modify :hero_id,
             references(:heroes,
               column: :id,
               name: "abilities_hero_id_fkey",
               type: :uuid,
               prefix: "public"
             )

      modify :game_id,
             references(:games,
               column: :id,
               name: "abilities_game_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    drop constraint(:buildings, "buildings_game_id_fkey")

    alter table(:buildings) do
      modify :game_id,
             references(:games,
               column: :id,
               name: "buildings_game_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    drop constraint(:heroes, "heroes_game_id_fkey")

    alter table(:heroes) do
      modify :game_id,
             references(:games,
               column: :id,
               name: "heroes_game_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    drop constraint(:items, "items_game_id_fkey")

    drop constraint(:items, "items_hero_id_fkey")

    alter table(:items) do
      modify :hero_id,
             references(:heroes,
               column: :id,
               name: "items_hero_id_fkey",
               type: :uuid,
               prefix: "public"
             )

      modify :game_id,
             references(:games,
               column: :id,
               name: "items_game_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    drop constraint(:players, "players_game_id_fkey")

    alter table(:players) do
      modify :game_id,
             references(:games,
               column: :id,
               name: "players_game_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end
  end
end
