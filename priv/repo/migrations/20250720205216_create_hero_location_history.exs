defmodule Dotuh.Repo.Migrations.CreateHeroLocationHistory do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:hero_location_history, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :hero_name, :text, null: false
      add :location_name, :text, null: false
      add :xpos, :bigint
      add :ypos, :bigint

      add :entered_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :game_id,
          references(:games,
            column: :id,
            name: "hero_location_history_game_id_fkey",
            type: :uuid,
            prefix: "public",
            on_delete: :delete_all
          )

      add :hero_id,
          references(:heroes,
            column: :id,
            name: "hero_location_history_hero_id_fkey",
            type: :uuid,
            prefix: "public",
            on_delete: :delete_all
          )
    end

    create unique_index(:hero_location_history, [:game_id, :hero_id, :location_name, :entered_at],
             name: "hero_location_history_unique_movement_index"
           )
  end

  def down do
    drop_if_exists unique_index(
                     :hero_location_history,
                     [:game_id, :hero_id, :location_name, :entered_at],
                     name: "hero_location_history_unique_movement_index"
                   )

    drop constraint(:hero_location_history, "hero_location_history_game_id_fkey")

    drop constraint(:hero_location_history, "hero_location_history_hero_id_fkey")

    drop table(:hero_location_history)
  end
end
